section .data
        filename db 'quotes.txt', 0h
        content db 'To be, or not to be, that is the question.', 0xa, 'A fool thinks himself to be wise, but a wise man knows himself to be a fool.', 0xa
        content2 db 'Better three hours too soon than a minute too late.', 0xa, 'No legacy is so rich as honesty.'
        length equ $ - content
        length2 equ $ - content2

section .text
        global _start

_start:
        mov ecx, 0711o
        mov ebx, filename
        mov eax, 8
        int 0x80

        mov eax, 5
        mov ebx, filename
        mov ecx, 1
        mov edx, 0777o
        int 0x80

        mov [fd_out], eax

        mov eax, 4
        mov ebx, [fd_out]
        mov ecx, content
        mov edx, length
        int 0x80

        mov eax, 19
        mov ebx, filename
        mov ecx, content2
        mov edx, length2

        mov eax, 6
        mov ebx, [fd_out]
        int 0x80

        mov eax, 1
        int 0x80

segment .bss
        fd_out resb 1


```
One of the challenges that came with this activity was that it was difficult to decide how to implement the appended text. 
I had to figure out whether I wanted to make a new variable or just input the entire block of text manually into a register.
Also, determining how to calculate and display the lengths of the text was another challenge.
This was similar to the text portion of the actitity in that I had to find whether to figure out the exact number of bytes
the text was, or to subtract the length value from the $ operator to get the number of bytes. 
Once that was figured out, I needed to organize the block of code so that 19 was saved to the eax register for appending. 
